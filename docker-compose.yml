version: '3.7'

services:
  app:
    container_name: adm_videos_app
    build: .
    profiles: ["app"]
    restart: unless-stopped
    env_file:
      - .env.local
    ports:
      - 8080:8080
    depends_on:
      - filebeat
      - mysql
      - rabbit
    networks:
      - adm_videos_network
    labels:
      filebeat_collector: true

  mysql:
    platform: linux/x86_64
    container_name: adm_videos_mysql
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=adm_videos
    security_opt:
      - seccomp:unconfined
    ports:
      - "3306:3306"
    networks:
      - adm_videos_network

  rabbit:
    container_name: adm_videos_rabbitmq
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=adm_videos
      - RABBITMQ_DEFAULT_PASS=123456
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - adm_videos_network


  keycloak:
    container_name: adm_videos_keycloak
    image: quay.io/keycloak/keycloak:22.0.1
    volumes:
      - ./.keycloak:/opt/keycloak/data/h2:rw
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - 8443:8080
    command:
#      - start-dev
      - start-dev --hostname-url=http://keycloak:8080 # Utilizar esse comando quando a aplicação estiver dentro do Docker
    networks:
      - adm_videos_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elk_es01
    restart: on-failure
    volumes:
      - ../.docker/es01:/usr/share/elasticsearch/data
    environment:
      - "discovery.type=single-node"
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    container_name: elk_kibana
    restart: on-failure
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - elastic

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.9
    container_name: elk_logstash
    restart: on-failure
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "25826:25826"
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic

  filebeat:
    container_name: adm_videos_filebeat
    image: docker.elastic.co/beats/filebeat:7.17.9
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro            # Docker logs
      - /var/run/docker.sock:/var/run/docker.sock:ro                        # Additional information about containers
      - ./.filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro # Configuration file
      - ./.filebeat:/usr/share/filebeat/data:rw                             # Persistence data
    user: root                                                              # Allow access to log files and docker.sock
    restart: on-failure
    networks:
      - adm_videos_network
      - elastic

volumes:
  adm_catalogo_keycloak:

networks:
  adm_videos_network:
  elastic: